{
  "openapi": "3.0.0",
  "info": {
    "title": "Visitor Management System API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/v1/access": {
      "get": {
        "summary": "Get all access logs",
        "description": "Fetches a list of access logs including visitor, location, status, and timestamp.",
        "tags": [
          "Access"
        ],
        "responses": {
          "200": {
            "description": "List of access logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "visitorId": {
                        "type": "integer"
                      },
                      "location": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "example": "allowed"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Record a visitor access attempt",
        "description": "Logs a visitor's attempt to access a location.",
        "tags": [
          "Access"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "visitorId",
                  "location"
                ],
                "properties": {
                  "visitorId": {
                    "type": "integer",
                    "description": "ID of the visitor"
                  },
                  "location": {
                    "type": "string",
                    "description": "The location being accessed"
                  },
                  "status": {
                    "type": "string",
                    "description": "Access status (optional, defaults handled in controller)",
                    "example": "allowed"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Access attempt recorded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "accessId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/api/v1/admin/dashboard-stats": {
      "get": {
        "summary": "Get dashboard statistics",
        "description": "Fetches summary statistics for admin dashboard including registered visitors, blacklisted visitors, today's approved appointments, and currently checked-in visitors.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Dashboard statistics successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "registeredVisitors": {
                          "type": "integer",
                          "description": "Total registered visitors"
                        },
                        "blacklistedVisitors": {
                          "type": "integer",
                          "description": "Total blacklisted visitors"
                        },
                        "approvedAppointmentsToday": {
                          "type": "integer",
                          "description": "Total approved appointments for today"
                        },
                        "checkedInVisitors": {
                          "type": "integer",
                          "description": "Total currently checked-in visitors"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch dashboard stats"
          }
        }
      }
    },
    "/api/v1/appointment": {
      "get": {
        "summary": "Get all appointments",
        "tags": [
          "Appointment"
        ],
        "responses": {
          "200": {
            "description": "List of all appointments"
          }
        }
      },
      "post": {
        "summary": "Create a new appointment",
        "tags": [
          "Appointment"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "purpose": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "time": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "department": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Appointment created successfully"
          }
        }
      }
    },
    "/api/v1/appointment/status": {
      "get": {
        "summary": "Get appointments by status",
        "tags": [
          "Appointment"
        ],
        "responses": {
          "200": {
            "description": "List of appointments filtered by status"
          }
        }
      }
    },
    "/api/v1/appointment/status-by-visitor": {
      "get": {
        "summary": "Get appointments by status for a visitor",
        "tags": [
          "Appointment"
        ],
        "responses": {
          "200": {
            "description": "List of appointments filtered by status for a specific visitor"
          }
        }
      }
    },
    "/api/v1/appointment/{appointment_id}": {
      "get": {
        "summary": "Get an appointment by ID",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointment_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment details"
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing appointment",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointment_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Appointment ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "purpose": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "time": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "department": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete an appointment",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appointment_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Appointment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment deleted successfully"
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      }
    },
    "/api/v1/auth/send-otp": {
      "post": {
        "summary": "Send OTP to visitor",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully"
          }
        }
      }
    },
    "/api/v1/auth/verify-otp": {
      "post": {
        "summary": "Verify OTP for visitor",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "otp": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully"
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "summary": "Request password reset",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Password reset email sent"
          }
        }
      }
    },
    "/api/v1/auth/reset-password/{token}": {
      "post": {
        "summary": "Reset password",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully"
          }
        }
      }
    },
    "/api/v1/auth/check-phone": {
      "post": {
        "summary": "Check if a phone number exists",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Phone number exists"
          },
          "404": {
            "description": "Phone number not registered"
          }
        }
      }
    },
    "/api/v1/auth/login-phone": {
      "post": {
        "summary": "Login using phone number",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "404": {
            "description": "Phone number not registered"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": "Login using email and password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully"
          }
        }
      }
    },
   
  "/api/v1/admin/blacklist": {
    "get": {
      "summary": "Get all blacklisted visitors",
      "tags": ["Blacklist"],
      "parameters": [
        {
          "in": "query",
          "name": "page",
          "schema": { "type": "integer", "default": 1 },
          "description": "Page number for pagination"
        },
        {
          "in": "query",
          "name": "limit",
          "schema": { "type": "integer", "default": 10 },
          "description": "Number of records per page"
        },
        {
          "in": "query",
          "name": "search",
          "schema": { "type": "string" },
          "description": "Search by name, NIC, email, or contact number"
        }
      ],
      "responses": {
        "200": {
          "description": "List of blacklisted visitors",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": { "type": "boolean" },
                  "currentPage": { "type": "integer" },
                  "totalPages": { "type": "integer" },
                  "totalRecords": { "type": "integer" },
                  "visitors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "visitor_id": { "type": "string" },
                        "fullName": { "type": "string" },
                        "nic": { "type": "string" },
                        "email": { "type": "string" },
                        "contact": { "type": "string" },
                        "blacklist_status": { "type": "string", "enum": ["yes", "no"] },
                        "blocked_at": { "type": "string", "format": "date-time" },
                        "reason": { "type": "string" },
                        "blocked_by_user_id": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": { "description": "Error fetching blacklisted visitors" }
      }
    }
  },
  "/api/v1/admin/blacklist/{visitor_id}": {
    "patch": {
      "summary": "Toggle blacklist status for a visitor",
      "tags": ["Blacklist"],
      "parameters": [
        {
          "in": "path",
          "name": "visitor_id",
          "required": true,
          "schema": { "type": "string" },
          "description": "Visitor ID"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["blacklist_status"],
              "properties": {
                "blacklist_status": {
                  "type": "string",
                  "enum": ["yes", "no"],
                  "description": "Blacklist status toggle"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason for blacklisting (only when blacklist_status = yes)"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Blacklist status updated successfully"
        },
        "400": {
          "description": "Invalid visitor ID or request body"
        },
        "404": {
          "description": "Visitor not found"
        },
        "500": {
          "description": "Error updating blacklist status"
        }
      }
    }
  }
,


    "/api/v1/checkInOut": {
      "get": {
        "summary": "Get all check-in/out records",
        "tags": [
          "CheckInOut"
        ],
        "responses": {
          "200": {
            "description": "List of check-in/out records"
          }
        }
      },
      "post": {
        "summary": "Create a new check-in/out record",
        "tags": [
          "CheckInOut"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "location": {
                    "type": "string"
                  },
                  "checkInTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "checkOutTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Record created"
          }
        }
      }
    },
    "/api/v1/checkInOut/{checkin_id}": {
      "get": {
        "summary": "Get a check-in/out record by ID",
        "tags": [
          "CheckInOut"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "checkin_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the check-in/out record"
          }
        ],
        "responses": {
          "200": {
            "description": "Record found"
          },
          "404": {
            "description": "Record not found"
          }
        }
      },
      "put": {
        "summary": "Update a check-in/out record",
        "tags": [
          "CheckInOut"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "checkin_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the record to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "location": {
                    "type": "string"
                  },
                  "checkInTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "checkOutTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Record updated"
          },
          "404": {
            "description": "Record not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a check-in/out record",
        "tags": [
          "CheckInOut"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "checkin_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the record to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted"
          },
          "404": {
            "description": "Record not found"
          }
        }
      }
    },
    "/api/v1/checkInOut/host/{user_id}": {
      "get": {
        "summary": "Get all visitors for a specific host",
        "tags": [
          "CheckInOut"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Host user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of visitors for the host"
          }
        }
      }
    },
    "/api/v1/checkInOut/current": {
      "get": {
        "summary": "Get all currently checked-in visitors",
        "tags": [
          "CheckInOut"
        ],
        "responses": {
          "200": {
            "description": "List of current visitors"
          }
        }
      }
    },
    "/api/v1/checkInOut/upcoming": {
      "get": {
        "summary": "Get upcoming visitors",
        "tags": [
          "CheckInOut"
        ],
        "responses": {
          "200": {
            "description": "List of upcoming visitors"
          }
        }
      }
    },
    "/api/v1/checkInOut/past": {
      "get": {
        "summary": "Get past visitors",
        "tags": [
          "CheckInOut"
        ],
        "responses": {
          "200": {
            "description": "List of past visitors"
          }
        }
      }
    },
    "/api/v1/checkInOut/checkin": {
      "post": {
        "summary": "Check in a visitor by RFID",
        "tags": [
          "CheckInOut"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rfidToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visitor checked in"
          }
        }
      }
    },
    "/api/v1/checkInOut/checkout": {
      "post": {
        "summary": "Check out a visitor by RFID",
        "tags": [
          "CheckInOut"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rfidToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visitor checked out"
          }
        }
      }
    },
    "/api/v1/checkInOut/end-meeting": {
      "post": {
        "summary": "End a meeting manually",
        "tags": [
          "CheckInOut"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkinId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Meeting ended"
          }
        }
      }
    },
    "/api/v1/checkInOut/extend-stay": {
      "post": {
        "summary": "Extend a visitor's stay",
        "tags": [
          "CheckInOut"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkinId": {
                    "type": "integer"
                  },
                  "newCheckoutTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stay extended"
          }
        }
      }
    },
    "/api/v1/checkin/checkin": {
      "post": {
        "summary": "Check in a visitor",
        "tags": [
          "Checkin"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "appointmentId"
                ],
                "properties": {
                  "appointmentId": {
                    "type": "integer",
                    "description": "The appointment ID of the visitor"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visitor successfully checked in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "checkin": {
                      "type": "object",
                      "description": "Check-in record details"
                    },
                    "token": {
                      "type": "string",
                      "description": "Token generated for visitor"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or error message"
          }
        }
      }
    },
    "/api/v1/checkin/checkout": {
      "post": {
        "summary": "Check out a visitor",
        "tags": [
          "Checkin"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tokenId"
                ],
                "properties": {
                  "tokenId": {
                    "type": "string",
                    "description": "Token ID assigned to the visitor at check-in"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visitor successfully checked out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "checkout": {
                      "type": "object",
                      "description": "Check-out record details"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or error message"
          }
        }
      }
    },
    "/api/v1/department/exportAllDepartments": {
      "get": {
        "summary": "Export all departments",
        "tags": [
          "Departments"
        ],
        "responses": {
          "200": {
            "description": "CSV or JSON of all departments"
          }
        }
      }
    },
    "/api/v1/department": {
      "get": {
        "summary": "Get all departments",
        "tags": [
          "Departments"
        ],
        "responses": {
          "200": {
            "description": "List of departments"
          }
        }
      },
      "post": {
        "summary": "Create a new department",
        "tags": [
          "Departments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the department"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Department created successfully"
          }
        }
      }
    },
    "/api/v1/department/generate-department-id": {
      "get": {
        "summary": "Generate a new department ID",
        "tags": [
          "Departments"
        ],
        "responses": {
          "200": {
            "description": "Generated department ID"
          }
        }
      }
    },
    "/api/v1/department/{department_id}/users": {
      "get": {
        "summary": "Get all users for a specific department",
        "tags": [
          "Departments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Department ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users for the department"
          }
        }
      }
    },
    "/api/v1/department/{department_id}": {
      "get": {
        "summary": "Get department by ID",
        "tags": [
          "Departments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Department ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Department data"
          }
        }
      },
      "put": {
        "summary": "Update an existing department",
        "tags": [
          "Departments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Department ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a department",
        "tags": [
          "Departments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "department_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Department ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Department deleted successfully"
          }
        }
      }
    },
    "/api/v1/location/available": {
      "get": {
        "summary": "Get all available locations",
        "tags": [
          "Locations"
        ],
        "responses": {
          "200": {
            "description": "List of available locations"
          }
        }
      }
    },
    "/api/v1/location/access-location": {
      "post": {
        "summary": "Record an access attempt for a location",
        "tags": [
          "Locations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "visitorId",
                  "locationId"
                ],
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "locationId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Access attempt recorded"
          }
        }
      }
    },
    "/api/v1/location": {
      "get": {
        "summary": "Get all locations",
        "tags": [
          "Locations"
        ],
        "responses": {
          "200": {
            "description": "List of locations"
          }
        }
      },
      "post": {
        "summary": "Create a new location",
        "tags": [
          "Locations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Location created successfully"
          }
        }
      }
    },
    "/api/v1/location/{location_id}": {
      "get": {
        "summary": "Get a location by ID",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Location ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Location details"
          }
        }
      },
      "put": {
        "summary": "Update an existing location",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Location ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a location",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "location_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Location ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Location deleted successfully"
          }
        }
      }
    },
    "/api/v1/notification/live": {
      "get": {
        "summary": "Get live notifications",
        "tags": [
          "Notifications"
        ],
        "responses": {
          "200": {
            "description": "List of live notifications"
          }
        }
      }
    },
    "/api/v1/notification": {
      "get": {
        "summary": "Get all notifications",
        "tags": [
          "Notifications"
        ],
        "responses": {
          "200": {
            "description": "List of notifications"
          }
        }
      },
      "post": {
        "summary": "Create a new notification",
        "tags": [
          "Notifications"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "message"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "visitorId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification created successfully"
          }
        }
      }
    },
    "/api/v1/notification/{notification_id}": {
      "get": {
        "summary": "Get a notification by ID",
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification details"
          }
        }
      },
      "put": {
        "summary": "Update an existing notification",
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Notification ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a notification",
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully"
          }
        }
      }
    },
    "/api/v1/notification/markAsRead/{notification_id}": {
      "patch": {
        "summary": "Mark a notification as read",
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notification_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read"
          }
        }
      }
    },
    "/api/v1/notification/markAllAsRead": {
      "post": {
        "summary": "Mark all notifications as read",
        "tags": [
          "Notifications"
        ],
        "responses": {
          "200": {
            "description": "All notifications marked as read"
          }
        }
      }
    },
    "/api/v1/permissionHasUser": {
      "get": {
        "summary": "Get all permission-user assignments",
        "tags": [
          "PermissionHasUser"
        ],
        "responses": {
          "200": {
            "description": "List of permission-user assignments"
          }
        }
      },
      "post": {
        "summary": "Assign a permission to a user",
        "tags": [
          "PermissionHasUser"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "permission_id",
                  "user_id",
                  "department_id"
                ],
                "properties": {
                  "permission_id": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "department_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission assigned to user successfully"
          }
        }
      }
    },
    "/api/v1/permissionHasUser/{permission_id}/{user_id}": {
      "delete": {
        "summary": "Remove a permission from a user",
        "tags": [
          "PermissionHasUser"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "permission_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Permission ID"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permission removed from user successfully"
          }
        }
      }
    },
    "/api/v1/permission": {
      "get": {
        "summary": "Get all permissions",
        "tags": [
          "Permission"
        ],
        "responses": {
          "200": {
            "description": "List of permissions"
          }
        }
      },
      "post": {
        "summary": "Create a new permission",
        "tags": [
          "Permission"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "permission_name"
                ],
                "properties": {
                  "permission_name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission created successfully"
          }
        }
      }
    },
    "/api/v1/permission/{permission_id}": {
      "get": {
        "summary": "Get a permission by ID",
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "permission_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Permission ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permission details"
          }
        }
      },
      "put": {
        "summary": "Update a permission",
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "permission_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Permission ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permission_name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permission updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a permission",
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "permission_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Permission ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permission deleted successfully"
          }
        }
      }
    },
    "/api/v1/user/admin/visitors": {
      "get": {
        "summary": "Get all visitors (admin only)",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of visitors"
          }
        }
      }
    },
    "/api/v1/user/reception/checkin": {
      "post": {
        "summary": "Check-in visitor (admin or receptionist)",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Check-in successful"
          }
        }
      }
    },
    "/api/v1/user/security/logs": {
      "get": {
        "summary": "Get security logs (admin or security)",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Security logs"
          }
        }
      }
    },
    "/api/v1/restrictedAccessAttempt": {
      "get": {
        "summary": "Get all restricted access attempts",
        "tags": [
          "RestrictedAccessAttempt"
        ],
        "responses": {
          "200": {
            "description": "List of restricted access attempts"
          }
        }
      },
      "post": {
        "summary": "Create a new restricted access attempt",
        "tags": [
          "RestrictedAccessAttempt"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "visitorId",
                  "location"
                ],
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "location": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Restricted access attempt created"
          }
        }
      }
    },
    "/api/v1/restrictedAccessAttempt/{attempt_id}": {
      "get": {
        "summary": "Get a restricted access attempt by ID",
        "tags": [
          "RestrictedAccessAttempt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "attempt_id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "The ID of the access attempt"
          }
        ],
        "responses": {
          "200": {
            "description": "Restricted access attempt details"
          },
          "404": {
            "description": "Attempt not found"
          }
        }
      }
    },
    "/api/v1/restrictedNotification": {
      "get": {
        "summary": "Get all restricted notifications",
        "tags": [
          "RestrictedNotification"
        ],
        "responses": {
          "200": {
            "description": "List of restricted notifications"
          }
        }
      },
      "post": {
        "summary": "Create a new restricted notification",
        "tags": [
          "RestrictedNotification"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "visitorId",
                  "message"
                ],
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Restricted notification created"
          }
        }
      }
    },
    "/api/v1/rfid": {
      "get": {
        "summary": "Get all RFID tokens",
        "tags": [
          "RFID"
        ],
        "responses": {
          "200": {
            "description": "List of RFID tokens"
          }
        }
      },
      "post": {
        "summary": "Create a new RFID token",
        "tags": [
          "RFID"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "visitorId"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "visitorId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "RFID token created"
          }
        }
      }
    },
    "/api/v1/rfid/{token_id}": {
      "get": {
        "summary": "Get RFID token by ID",
        "tags": [
          "RFID"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the RFID token"
          }
        ],
        "responses": {
          "200": {
            "description": "RFID token data"
          }
        }
      },
      "put": {
        "summary": "Update an existing RFID token",
        "tags": [
          "RFID"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the RFID token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "visitorId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "RFID token updated"
          }
        }
      },
      "delete": {
        "summary": "Delete an RFID token",
        "tags": [
          "RFID"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the RFID token"
          }
        ],
        "responses": {
          "200": {
            "description": "RFID token deleted"
          }
        }
      }
    },
    "/api/v1/user-department": {
      "get": {
        "summary": "Get all user-department relations",
        "tags": [
          "UserDepartments"
        ],
        "responses": {
          "200": {
            "description": "List of user-department relations"
          }
        }
      }
    },
    "/api/v1/user-notification": {
      "get": {
        "summary": "Get all user notifications",
        "tags": [
          "UserNotifications"
        ],
        "responses": {
          "200": {
            "description": "List of user notifications"
          }
        }
      },
      "post": {
        "summary": "Create a new user notification",
        "tags": [
          "UserNotifications"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "message"
                ],
                "properties": {
                  "userId": {
                    "type": "integer"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User notification created successfully"
          }
        }
      }
    },
    "/api/v1/user/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          }
        }
      }
    },
    "/api/v1/user/exportAllHosts": {
      "get": {
        "summary": "Export all hosts",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of all hosts"
          }
        }
      }
    },
    "/api/v1/user/adminDashboard": {
      "get": {
        "summary": "Access admin dashboard (protected)",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Admin dashboard info"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/v1/user/user-positions": {
      "get": {
        "summary": "Get positions by user type",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of positions"
          }
        }
      }
    },
    "/api/v1/user/hosts": {
      "get": {
        "summary": "Get all hosts",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of hosts"
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of users"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          }
        }
      }
    },
    "/api/v1/user/generate-user-id": {
      "get": {
        "summary": "Generate a new user ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Generated user ID"
          }
        }
      }
    },
    "/api/v1/user/{user_id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          }
        }
      }
    },
    "/api/v1/userTypes": {
      "get": {
        "summary": "Get all user types",
        "tags": [
          "UserTypes"
        ],
        "responses": {
          "200": {
            "description": "List of user types"
          }
        }
      },
      "post": {
        "summary": "Create a new user type",
        "tags": [
          "UserTypes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User type created"
          }
        }
      }
    },
    "/api/v1/userTypes/{user_type_id}": {
      "get": {
        "summary": "Get user type by ID",
        "tags": [
          "UserTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_type_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User type details"
          }
        }
      },
      "put": {
        "summary": "Update a user type",
        "tags": [
          "UserTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_type_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User type updated"
          }
        }
      },
      "delete": {
        "summary": "Delete a user type",
        "tags": [
          "UserTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_type_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User type deleted"
          }
        }
      }
    },
    "/api/v1/visitorRestriction": {
      "get": {
        "summary": "Get all visitor restrictions",
        "tags": [
          "VisitorRestriction"
        ],
        "responses": {
          "200": {
            "description": "List of visitor restrictions"
          }
        }
      },
      "post": {
        "summary": "Create a new visitor restriction",
        "tags": [
          "VisitorRestriction"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "visitorId",
                  "restrictionReason"
                ],
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "restrictionReason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Visitor restriction created"
          }
        }
      }
    },
    "/api/v1/visitor": {
      "get": {
        "summary": "Get all visitors",
        "tags": [
          "Visitor"
        ],
        "responses": {
          "200": {
            "description": "List of all visitors"
          }
        }
      },
      "post": {
        "summary": "Create a new visitor",
        "tags": [
          "Visitor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "contact_number": {
                    "type": "string"
                  },
                  "id_number": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Visitor created"
          }
        }
      }
    },
    "/api/v1/visitor/{visitor_id}": {
      "get": {
        "summary": "Get visitor by ID",
        "tags": [
          "Visitor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "visitor_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Visitor data"
          }
        }
      },
      "put": {
        "summary": "Update visitor information",
        "tags": [
          "Visitor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "visitor_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "contact_number": {
                    "type": "string"
                  },
                  "id_number": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visitor updated"
          }
        }
      },
      "delete": {
        "summary": "Delete a visitor",
        "tags": [
          "Visitor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "visitor_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Visitor deleted"
          }
        }
      }
    },
    "/api/v1/visitor/check-email": {
      "get": {
        "summary": "Check if email exists",
        "tags": [
          "Visitor"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email existence result"
          }
        }
      }
    },
    "/api/v1/visitor/check-idnumber": {
      "get": {
        "summary": "Check if ID number exists",
        "tags": [
          "Visitor"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "idNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ID number existence result"
          }
        }
      }
    },
    "/api/v1/visitor/blacklisted": {
      "get": {
        "summary": "Get all blacklisted visitors",
        "tags": [
          "Visitor"
        ],
        "responses": {
          "200": {
            "description": "List of blacklisted visitors"
          }
        }
      }
    },
    "/api/v1/visitor/{visitor_id}/blacklist": {
      "patch": {
        "summary": "Toggle blacklist status for a visitor",
        "tags": [
          "Visitor"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "visitor_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blacklist status toggled"
          }
        }
      }
    },
    "/api/v1/visitor/generate-visitor-id": {
      "get": {
        "summary": "Generate a new visitor ID",
        "tags": [
          "Visitor"
        ],
        "responses": {
          "200": {
            "description": "Generated visitor ID"
          }
        }
      }
    },
    "/api/v1/visitor/past-visits": {
      "get": {
        "summary": "Get past visits of visitors",
        "tags": [
          "Visitor"
        ],
        "responses": {
          "200": {
            "description": "Past visits data"
          }
        }
      }
    },
    "/api/v1/visitor/send-otp": {
      "post": {
        "summary": "Send OTP to visitor",
        "tags": [
          "Visitor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "contact_number"
                ],
                "properties": {
                  "contact_number": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent"
          }
        }
      }
    },
    "/api/v1/visitor/verify-otp": {
      "post": {
        "summary": "Verify visitor OTP",
        "tags": [
          "Visitor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "contact_number",
                  "otp"
                ],
                "properties": {
                  "contact_number": {
                    "type": "string"
                  },
                  "otp": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully"
          }
        }
      }
    },
    "/api/v1/visit/end-visit": {
      "post": {
        "summary": "End a visitor's visit",
        "tags": [
          "Visit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "visitorId"
                ],
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Visit ended successfully"
          }
        }
      }
    },
    "/api/v1/visit/extend-stay": {
      "post": {
        "summary": "Extend a visitor's stay",
        "tags": [
          "Visit"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "visitorId",
                  "newEndTime"
                ],
                "properties": {
                  "visitorId": {
                    "type": "integer"
                  },
                  "newEndTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stay extended successfully"
          }
        }
      }
    }
  },
  "components": {},
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Blacklist",
      "description": "Blacklist management endpoints"
    },
    {
      "name": "BlacklistVisitor",
      "description": "Manage visitors who are blacklisted"
    },
    {
      "name": "CheckInOut",
      "description": "Visitor check-in and check-out management"
    },
    {
      "name": "Checkin",
      "description": "Visitor check-in and check-out using token or appointment"
    },
    {
      "name": "Departments",
      "description": "API endpoints for managing departments"
    },
    {
      "name": "Locations",
      "description": "API endpoints for managing locations"
    },
    {
      "name": "Notifications",
      "description": "API endpoints for managing notifications"
    },
    {
      "name": "PermissionHasUser",
      "description": "Manage user permissions"
    },
    {
      "name": "Permission",
      "description": "Manage permissions"
    },
    {
      "name": "User",
      "description": "Role-based access routes"
    },
    {
      "name": "RestrictedAccessAttempt",
      "description": "Routes for restricted access attempts"
    },
    {
      "name": "RestrictedNotification",
      "description": "Routes for restricted notifications"
    },
    {
      "name": "RFID",
      "description": "Routes for managing RFID tokens"
    },
    {
      "name": "UserDepartments",
      "description": "Routes for managing user-department relations"
    },
    {
      "name": "UserNotifications",
      "description": "Routes for managing user notifications"
    },
    {
      "name": "Users",
      "description": "Routes for managing users"
    },
    {
      "name": "UserTypes",
      "description": "Routes for managing user types"
    },
    {
      "name": "VisitorRestriction",
      "description": "Routes for managing visitor restrictions"
    },
    {
      "name": "Visitor",
      "description": "API for managing visitors"
    },
    {
      "name": "Visit",
      "description": "API for managing visits"
    }
  ]
}